# Endpoint: /search/retrieve
# Method: POST

"/search/retrieve":
  post:
    description: Hybrid search using either traditional keyword methods or neural (embeddings-based) search for your knowledge base.
    # --- Parameters (Headers) ---
    parameters:
    - name: Authorization
      in: header
      required: true
      description: Bearer token (your API key)
      schema:
        type: string
      example: Bearer {API_KEY}
    - name: Content-Type
      in: header
      required: true
      description: Request content type
      schema:
        type: string
        default: application/json
    - name: accept
      in: header
      required: true
      description: Response content type
      schema:
        type: string
        default: application/json
    # --- Request Body ---
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              query:
                type: string
                description: Search query string to find relevant content from indexed sources.
              tenant_id:
                type: string
                description: Primary organizational identifier (e.g., enterprise client, company) for multi-tenant data isolation.
              sub_tenant_id:
                type: string
                description: Secondary organizational identifier (e.g., department, team, project) within a tenant for hierarchical data organization; defaults to tenant_id if not provided.
              max_chunks:
                type: integer
                description: Maximum number of content chunks to return from the search.
              alpha:
                oneOf:
                - type: number
                  format: float
                  default: 0.8
                - type: string
                  enum: ["auto"]
                description: Search algorithm parameter for result ranking. Controls the balance between semantic and keyword search (0.0 = keyword only, 1.0 = semantic only). Use 'auto' to let Cortex intelligently decide the optimal alpha value based on the query.
              recency_bias:
                type: number
                format: float
                default: 0.5
                description: Bias towards more recent content. A value of 0 means no preference, a value of 1 means recent sources are strongly preferred.
            required:
            - query
    # --- Responses ---
    responses:
      200:
        description: Successful search results
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  chunk_uuid:
                    type: string
                    description: Unique identifier for the content chunk
                    example: "CortexDoc37e854b429784b148d4fc910812bdc581753761779_20_v1"
                  source_id:
                    type: string
                    description: Identifier of the source document
                    example: "CortexDoc37e854b429784b148d4fc910812bdc581753761779"
                  source_title:
                    type: string
                    description: Title of the source document
                    example: "IEEE Transactions LaTeX Templates.pdf"
                  chunk_content:
                    type: string
                    description: The relevant content chunk
                    example: "JOURNAL OF LATEX CLASS FILES, VOL. 14, NO. 8, AUGUST 2015 12 Fig. 10: Comparison of models with 4bit precision on Medical QA dataset..."
                  source_url:
                    type: string
                    description: URL or path to the source document
                    example: "ToayuCogoBdxZVoZQ1ft8ZoRzCO2/Hello/Hello/local_source/CortexDoc37e854b429784b148d4fc910812bdc581753761779"
                  source_upload_time:
                    type: string
                    description: Timestamp when the source was uploaded
                    example: "1753761802.079415"
                  source_collection:
                    type: array
                    description: Collection tags associated with the source
                    items:
                      type: string
                    example: []
                  source_type:
                    type: string
                    description: Type of the source document
                    example: "file"
                  layout:
                    type: string
                    description: JSON string containing layout information for the chunk
                    example: '{"coordinates": {"x": 48.96399688720703, "y": 26.49277114868164, "width": 514.0717697143555, "height": 721.1119651794434}, "page": 12}'
                  version:
                    type: string
                    description: Version of the chunk
                    example: "v1"
                  source_last_updated_time:
                    type: string
                    description: Timestamp when the source was last updated
                    example: ""
                  relevancy_score:
                    type: number
                    format: float
                    description: Relevance score of the result
                    example: 0.8363813161849976
                  rerank_score:
                    type: number
                    format: float
                    nullable: true
                    description: Rerank score if available
                    example: null
      400:
        description: Bad request - invalid parameters
      401:
        description: Unauthorized - invalid API key
      500:
        description: Internal server error